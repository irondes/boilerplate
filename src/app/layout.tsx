import type { Metadata } from 'next'
import {
	StackProvider,
	StackTheme,
} from '@stackframe/stack'
import { stackServerApp } from '../stack'
import {
	Geist,
	Geist_Mono,
} from 'next/font/google'
import './globals.css'

import {
	SidebarInset,
	SidebarProvider,
	SidebarTrigger,
} from '@/components/ui/sidebar'
import { AppSidebar } from '@/components/nav/app-sidebar'
import { Separator } from '@/components/ui/separator'
import { Breadcrumbs } from '@/components/nav/breadcrumbs'

// import { Breadcrumbs } from "../components/nav/breadcrumbs";

const geistSans = Geist({
	variable:
		'--font-geist-sans',
	subsets: ['latin'],
})

const geistMono = Geist_Mono({
	variable:
		'--font-geist-mono',
	subsets: ['latin'],
})

export const metadata: Metadata =
	{
		title:
			process.env
				.NEXT_PUBLIC_APP_NAME ||
			'Create Next App',
		description:
			process.env
				.NEXT_PUBLIC_APP_DESCRIPTION ||
			'Generated by create next app',
	}

export default async function RootLayout({
	children,
}: Readonly<{
	children: React.ReactNode
}>) {
	const user =
		await stackServerApp.getUser()

	console.log('RootLayout')
	return (
		<html
			lang={
				process.env
					.NEXT_PUBLIC_APP_LANG ||
				'pt-BR'
			}
		>
			<body
				className={`${geistSans.variable} ${geistMono.variable}`} // antialiased flex flex-col min-h-screen p-2.5 space-x-2.5
			>
				<StackProvider
					app={stackServerApp}
					lang={
						(process.env
							.NEXT_PUBLIC_APP_LANG as
							| 'pt-BR'
							| 'en-US'
							| 'es-ES') ||
						'pt-BR'
					}
				>
					<StackTheme>
						{user ? (
							<SidebarProvider>
								<AppSidebar />
								<SidebarInset>
									<header className='flex h-12 shrink-0 items-center gap-2 border-b px-4 justify-between'>
										<SidebarTrigger />
										<Separator
											orientation='vertical'
											className='h-4'
										/>
										<Breadcrumbs />
									</header>

									<main className='flex-1 p-4'>
										{children}
									</main>
								</SidebarInset>
							</SidebarProvider>
						) : (
							children
						)}
					</StackTheme>
				</StackProvider>
			</body>
		</html>
	)
}
